/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Transfer;

import Home.window;
import Staffs.p_player;
import Staffs.player_User;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author faisa
 */
public class transfer extends javax.swing.JFrame {

    /**
     * Creates new form transfer_sell
     */
    public transfer() {
        initComponents();
        shortListed_player();
        targetListed_player();

        Toolkit tk = getToolkit();
        Dimension size = tk.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public ArrayList<transfer_sell> userList() {
        ArrayList<transfer_sell> userslist = new ArrayList();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);
            String query = "SELECT * FROM [Transfer Sell]";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                transfer_sell user = new transfer_sell(rs.getInt("Sell_ID"), rs.getInt("P_ID"), rs.getString("P_NAME"), rs.getString("CON_TYPE"), rs.getInt("Fee"));
                userslist.add(user);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return userslist;
    }

    public void shortListed_player() {
        ArrayList<transfer_sell> list = userList();
        DefaultTableModel model = (DefaultTableModel) sell_jTable.getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getSell_Id();
            row[1] = list.get(i).getP_Id();
            row[2] = list.get(i).getP_name();
            row[3] = list.get(i).getCon_typ();
            row[4] = list.get(i).getSell_tfee();

            model.addRow(row);
        }
    }

    public ArrayList<transfer_buy> tranList() {
        ArrayList<transfer_buy> translist = new ArrayList();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);
            String query = "SELECT * FROM [Transfer Buy]";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                transfer_buy user = new transfer_buy(rs.getInt("Buy_ID"), rs.getString("NP_NAME"), rs.getString("CON_TYPE"), rs.getInt("Year"), rs.getInt("Fee"));
                translist.add(user);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return translist;
    }

    public void targetListed_player() {
        ArrayList<transfer_buy> list = tranList();
        DefaultTableModel model = (DefaultTableModel) buy_jTable.getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getBuy_Id();
            row[1] = list.get(i).getP_name();
            row[2] = list.get(i).getCon_typ();
            row[3] = list.get(i).getYear();
            row[4] = list.get(i).getSell_tfee();

            model.addRow(row);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sell_jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        sell_con_type = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sell_fee_tf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        np_name_tf = new javax.swing.JTextField();
        con_yr = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        buy_jTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        buy_tf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        buy_con_type = new javax.swing.JTextField();
        sold_btn = new javax.swing.JButton();
        back_btn1 = new javax.swing.JButton();
        buy_up_btn = new javax.swing.JButton();
        buy_delete_btn = new javax.swing.JButton();
        buy_clear_btn = new javax.swing.JButton();
        buy_insert_btn = new javax.swing.JButton();
        remove_btn = new javax.swing.JButton();
        sell_up_btn = new javax.swing.JButton();
        sell_clear_btn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 525));
        setMinimumSize(new java.awt.Dimension(1000, 525));
        setPreferredSize(new java.awt.Dimension(1000, 525));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sell_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sell ID", "Player ID", "Player Name", "Contract Type", "Transfer Fee"
            }
        ));
        sell_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sell_jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sell_jTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 63, 620, 140));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sell Player");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contract Type");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        sell_con_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sell_con_typeActionPerformed(evt);
            }
        });
        getContentPane().add(sell_con_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 120, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tranfer Fee");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 70, -1));

        sell_fee_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sell_fee_tfActionPerformed(evt);
            }
        });
        getContentPane().add(sell_fee_tf, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 100, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Transfer Window");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Buy Player");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Player Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, 20));

        np_name_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                np_name_tfActionPerformed(evt);
            }
        });
        getContentPane().add(np_name_tf, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 120, -1));

        con_yr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                con_yrActionPerformed(evt);
            }
        });
        getContentPane().add(con_yr, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, 60, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Year");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, 20));

        buy_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Buy ID", "Player Name", "Contract Type", "Year", "Transfer Fee"
            }
        ));
        buy_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buy_jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(buy_jTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 620, 160));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tranfer Fee");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 69, -1));

        buy_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_tfActionPerformed(evt);
            }
        });
        getContentPane().add(buy_tf, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 120, -1));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Contract Type");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, -1, 20));

        buy_con_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_con_typeActionPerformed(evt);
            }
        });
        getContentPane().add(buy_con_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 120, -1));

        sold_btn.setText("Sold");
        sold_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sold_btnActionPerformed(evt);
            }
        });
        getContentPane().add(sold_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 60, -1));

        back_btn1.setText("Back");
        back_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btn1ActionPerformed(evt);
            }
        });
        getContentPane().add(back_btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        buy_up_btn.setText("Update");
        buy_up_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_up_btnActionPerformed(evt);
            }
        });
        getContentPane().add(buy_up_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, -1, -1));

        buy_delete_btn.setText("Delete");
        buy_delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_delete_btnActionPerformed(evt);
            }
        });
        getContentPane().add(buy_delete_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, -1, -1));

        buy_clear_btn.setText("Clear");
        buy_clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_clear_btnActionPerformed(evt);
            }
        });
        getContentPane().add(buy_clear_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        buy_insert_btn.setText("Insert");
        buy_insert_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_insert_btnActionPerformed(evt);
            }
        });
        getContentPane().add(buy_insert_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 70, -1));

        remove_btn.setText("Remove");
        remove_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_btnActionPerformed(evt);
            }
        });
        getContentPane().add(remove_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 80, -1));

        sell_up_btn.setText("Update");
        sell_up_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sell_up_btnActionPerformed(evt);
            }
        });
        getContentPane().add(sell_up_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        sell_clear_btn.setText("Clear");
        sell_clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sell_clear_btnActionPerformed(evt);
            }
        });
        getContentPane().add(sell_clear_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 60, -1));

        jButton1.setText("Buy");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 50, -1));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Staffs/gg.png"))); // NOI18N
        jLabel11.setIconTextGap(0);
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 505));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sell_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sell_jTableMouseClicked
        // TODO add your handling code here:

        int i = sell_jTable.getSelectedRow();
        TableModel model = sell_jTable.getModel();

        sell_con_type.setText(model.getValueAt(i, 3).toString());

        sell_fee_tf.setText(model.getValueAt(i, 4).toString());

    }//GEN-LAST:event_sell_jTableMouseClicked

    private void sell_con_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sell_con_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sell_con_typeActionPerformed

    private void sell_fee_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sell_fee_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sell_fee_tfActionPerformed

    private void np_name_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_np_name_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_np_name_tfActionPerformed

    private void con_yrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_con_yrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_con_yrActionPerformed

    private void buy_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buy_jTableMouseClicked
        // TODO add your handling code here:
        int i = buy_jTable.getSelectedRow();
        TableModel model = buy_jTable.getModel();

        np_name_tf.setText(model.getValueAt(i, 1).toString());

        buy_con_type.setText(model.getValueAt(i, 2).toString());

        con_yr.setText(model.getValueAt(i, 3).toString());

        buy_tf.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_buy_jTableMouseClicked

    private void buy_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buy_tfActionPerformed

    private void buy_con_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_con_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buy_con_typeActionPerformed

    private void sell_up_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sell_up_btnActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);
            int row = sell_jTable.getSelectedRow();
            String value = (sell_jTable.getModel().getValueAt(row, 0).toString());
            String query = "Update [Transfer sell] SET CON_TYPE = ? , FEE = ? where sell_ID =" + value;
            PreparedStatement pst = con.prepareStatement(query);

            pst.setString(1, sell_con_type.getText());
            pst.setString(2, sell_fee_tf.getText());

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Updated Sucessfully!");

            DefaultTableModel model = (DefaultTableModel) sell_jTable.getModel();
            model.setRowCount(0);
            shortListed_player();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_sell_up_btnActionPerformed

    private void sell_clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sell_clear_btnActionPerformed
        // TODO add your handling code here:
        sell_con_type.setText("");
        sell_fee_tf.setText("");


    }//GEN-LAST:event_sell_clear_btnActionPerformed

    private void sold_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sold_btnActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure sold the player?", "Sold", JOptionPane.YES_NO_CANCEL_OPTION);
        if (confirm == 0) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
                Connection con = DriverManager.getConnection(url);
                int row = sell_jTable.getSelectedRow();
                String value = (sell_jTable.getModel().getValueAt(row, 0).toString());
                String value_Pid = (sell_jTable.getModel().getValueAt(row, 1).toString());

                String med = "Delete from [Player Salary] where P_ID IN (Select P_ID from [Transfer Sell] where Sell_ID = " + value + ")";
                PreparedStatement med_pst = con.prepareStatement(med);
                med_pst.executeUpdate();

                String sal = "Delete from [Player Medical Status] where P_ID IN (Select P_ID from [Transfer Sell] where Sell_ID = " + value + ")";
                PreparedStatement sal_pst = con.prepareStatement(sal);
                sal_pst.executeUpdate();

                String query = "Delete from [Transfer sell] where sell_ID =" + value;
                PreparedStatement pst = con.prepareStatement(query);
                pst.executeUpdate();

                String query_plr = "Delete from Player where P_ID  = " + value_Pid;
                PreparedStatement pst_plr = con.prepareStatement(query_plr);
                pst_plr.executeUpdate();

                DefaultTableModel model = (DefaultTableModel) sell_jTable.getModel();
                model.setRowCount(0);
                shortListed_player();

                JOptionPane.showMessageDialog(null, "Your Player Sold Successfully");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_sold_btnActionPerformed

    private void back_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btn1ActionPerformed
        // TODO add your handling code here:
        window field = new window();
        field.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_back_btn1ActionPerformed

    private void buy_up_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_up_btnActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);
            int row = buy_jTable.getSelectedRow();
            String value = (buy_jTable.getModel().getValueAt(row, 0).toString());
            String query = "Update [Transfer buy] SET NP_NAME = ?, CON_TYPE = ? ,Year = ?, FEE = ? where buy_ID =" + value;
            PreparedStatement pst = con.prepareStatement(query);

            pst.setString(1, np_name_tf.getText());
            pst.setString(2, buy_con_type.getText());
            pst.setString(3, con_yr.getText());
            pst.setString(4, buy_tf.getText());

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Updated Sucessfully!");

            DefaultTableModel model = (DefaultTableModel) buy_jTable.getModel();
            model.setRowCount(0);
            targetListed_player();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_buy_up_btnActionPerformed

    private void buy_delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_delete_btnActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure to Delete?", "Delete", JOptionPane.YES_NO_CANCEL_OPTION);
        if (confirm == 0) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
                Connection con = DriverManager.getConnection(url);
                int row = buy_jTable.getSelectedRow();
                String value = (buy_jTable.getModel().getValueAt(row, 0).toString());

                String query = "Delete from [Transfer buy] where buy_ID =" + value;
                PreparedStatement pst = con.prepareStatement(query);
                pst.executeUpdate();

                DefaultTableModel model = (DefaultTableModel) buy_jTable.getModel();
                model.setRowCount(0);
                targetListed_player();

                JOptionPane.showMessageDialog(null, "Deleted Sucessfully!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_buy_delete_btnActionPerformed

    private void buy_clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_clear_btnActionPerformed
        // TODO add your handling code here:
        np_name_tf.setText("");
        buy_con_type.setText("");
        con_yr.setText("");
        buy_tf.setText("");
    }//GEN-LAST:event_buy_clear_btnActionPerformed

    private void buy_insert_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_insert_btnActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);
            String query = "insert into [Transfer buy](NP_NAME , Con_type, Year, Fee)values(?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, np_name_tf.getText());
            pst.setString(2, buy_con_type.getText());
            pst.setString(3, con_yr.getText());
            pst.setString(4, buy_tf.getText());

            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) buy_jTable.getModel();
            model.setRowCount(0);
            targetListed_player();

            JOptionPane.showMessageDialog(null, "Inserted Sucessfully!");

            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_buy_insert_btnActionPerformed

    private void remove_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_btnActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure to Remove Player?", "Remove", JOptionPane.YES_NO_CANCEL_OPTION);
        if (confirm == 0) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=Soccer_Club_Management_System;user=sa;password=123456";
                Connection con = DriverManager.getConnection(url);
                int row = sell_jTable.getSelectedRow();
                String value = (sell_jTable.getModel().getValueAt(row, 0).toString());

                String query = "Delete from [Transfer sell] where sell_ID =" + value;
                PreparedStatement pst = con.prepareStatement(query);
                pst.executeUpdate();

                DefaultTableModel model = (DefaultTableModel) sell_jTable.getModel();
                model.setRowCount(0);
                shortListed_player();

                JOptionPane.showMessageDialog(null, "Removed Sucessfully!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_remove_btnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            String msg = np_name_tf.getText();
            new p_player(msg).setVisible(true);
            setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_btn1;
    private javax.swing.JButton buy_clear_btn;
    private javax.swing.JTextField buy_con_type;
    private javax.swing.JButton buy_delete_btn;
    private javax.swing.JButton buy_insert_btn;
    private javax.swing.JTable buy_jTable;
    private javax.swing.JTextField buy_tf;
    private javax.swing.JButton buy_up_btn;
    private javax.swing.JTextField con_yr;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField np_name_tf;
    private javax.swing.JButton remove_btn;
    private javax.swing.JButton sell_clear_btn;
    private javax.swing.JTextField sell_con_type;
    private javax.swing.JTextField sell_fee_tf;
    private javax.swing.JTable sell_jTable;
    private javax.swing.JButton sell_up_btn;
    private javax.swing.JButton sold_btn;
    // End of variables declaration//GEN-END:variables
}
